# 題目1

小頭今天出門去早餐店買了一份蛋餅和一杯奶茶，蛋餅一份 `25` 元，奶茶一份 `15` 元，不過今天蛋餅打 `8` 折，於是小頭開心地買了早餐回家。請問小頭買早餐一共花了多少錢。(用程式印出計算式和答案)

* 範例輸出
```
25 * 0.8 + 15 = 35
```

* 參考解答：
```
var egg = 25, tea = 15;
console.log(egg + ' * 0.8 + ' + tea + ' = ' + (egg * 0.8 + tea) );
```

> 作者：大頭

# 題目2

宣告一個變數，指定其初始值為 `pomelo`，並使用 `console.log` 印出以下圖案。

![Imgur](http://i.imgur.com/qvuId2O.png)  

* 參考解答：

```
var x = 'pomelo';
console.log('0000000000');
console.log('0 ' + x + ' 0');
console.log('0000000000');
```

> 作者：青祐

# 題目3

請依照以下程式碼的指示在 [<kbd>repl.it</kbd>](http://repl.it/languages/JavaScript) 網站執行。

```
var a;
console.log('a = ' + a);

// Step 1: 複製這段程式碼到 repl.it
// Step 2: 執行這段程式碼
// Step 3: 直接在右側黑黑的視窗輸入 a = 10
// Step 4: 然後再執行一次這個程式碼
// Step 5: 直接在右側黑黑的視窗輸入 a = 'A plain text'
// Step 6: 再執行一次
```

> 作者：信億

# 題目4

定義兩個不同的變數 `a`、`b`，請寫一個程式，讓 `a`、`b` 的值互相交換。你的程式必須先印出 `a` 和 `b` 的資料，然後將 `a` 和 `b` 的資料進行交換，最後在印出一次 `a` 和 `b` 的資料。

* 參考解答：

```
var a = 4, b = 6;
var temp;
console.log('a = ' + a + ', b = ' + b);
// 使用 temp 來交換變數 a 和 b
temp = a;
a = b;
b = temp;
console.log('a = ' + a + ', b = ' + b);
```

> 作者：承翰

# 題目5

首先，定義一個名為 `q` 的變數，並指定其初始值為 `5`。讓變數 `q` 每次加 `1`，連續加到 `q` 等於 `16` 為止。在 `q` 的值介於 `12` 到 `15` 之間時，印出 `q = ?` 的資料。

* 參考答案：

```
var q = 5;
q = q + 1;
q = q + 1;
q = q + 1;
q = q + 1;
q = q + 1;
q = q + 1;
q = q + 1;
console.log('q = '+q);
q = q + 1;
console.log('q = '+q);
q = q + 1;
console.log('q = '+q);
q = q + 1;
console.log('q = '+q);
q = q + 1;
```

> 作者：昭陽

# 題目6

有一台計程車計費方式為：里程數在 `1500` 公尺以下皆為 `70` 元，超過之里程數則以 `500` 公尺加價 `5` 元的比例計算。請寫一程式計算車費。


```
console.log("請輸入里程數:");
var meter = prompt();
```

這樣來取得里程數喔  

* 參考答案：

```
var meter = 2000, pay;
pay = 70;
if( meter > 1500 )
{
    pay += (meter - 1500) / 100;
}
console.log(pay);
```

> 作者：益豪

# 題目7

宣告一個變數 `score`，當 `score` 為 `0`~`59` 時顯示 `Bad`，當 `score` 為 `60`~`100` 之間時顯示 `Good`，其餘則輸出 `Oops!`。

```
console.log("請輸入分數:");
var score = prompt();
```

這樣來取得分數喔  

* 參考答案：

```
var score = 60;
if( score >= 0 && score <= 59 )
{
    console.log('Good');
}
else if( score >= 60 && score <= 100 )
{
    console.log('Bad');
}
else
{
    console.log('Oops!');
}
```

> 作者：庭安

# 回家作業 第一題

富翁堯堯有一天到賭場小試身手，他總共骰了十次骰子，請身為賭場管理員的你隨機產生十組整數，範圍為 `0`~`100`，數字可重複！並將此十組整數存入一陣列，此陣列名稱為 `rich`，最後請印出這十組整數！  
（請採用 `while` 迴圈及亂數產生 `Math.random()` ）  

```
var rich = [];
var a = 0;
while(a < 10)
{
    rich[a] = Math.floor(Math.random()*100);
    a++;
}
console.log(rich);
```

> 作者：培堯

# 回家作業 第二題（承上題）

因為富翁堯堯覺得骰子的值排列沒有規則，所以請你將rich陣列的值由小到大排列，並印出
（建議使用氣泡排序法或選擇排序法）  

```
var i, j, temp;
for(i = 0; i < 10; i += 1)
{
    for(j = 10-i-1; j>=0; j--)
    {
        if(rich[i] < rich[j])
        {
            temp = rich[i];
            rich[i] = rich[j];
            rich[j] = temp;
        }
    }
}
console.log(rich);
```

> 作者：培堯

# 回家作業 第三題（承上題）

龜毛的富翁堯堯非常喜歡偶數，所以請將排列好的rich陣列內是偶數的值印出
（使用switch）

```
var i;
for(i = 0; i < 10; i++)
{
    switch(rich[i] % 2)
    {
        case 0 :
            console.log(rich[i]);
            break;
        default:
            break;
    }
}
```

> 作者：培堯

# 回家作業 第四題（承上題）

討厭的富翁堯堯指定將 `rich` 陣列奇數索引值的值平方後相加，再減去偶數索引值的值，然後印出結果，即 `rich[1] * rich[1] + rich[3] * rich[3] + ... - rich[0] - rich[2] - ...` 之結果。
(平方可使用 `Math.pow(x,y) //Returns the value of x to the power of y` ）

```
var i;
var result = 0; // 歸零很重要
for(i = 0; i < 10; i++)
{
    if(i % 2 == 1)
    {
        result = result + Math.pow(rich[i] , 2);
    }
    else
    {
        result = result - rich[i];
    }
}
console.log(result);
```

> 作者：培堯

--

# 回家作業 第五題

宣告三個變數 `var i=-3, j=2, k=0`：

 1. 先分別試試 `&&` 運算子和 `||` 運算子對運算式做判斷（ex. print 出 i<0 && j>0 的結果, etc），並整理出這兩的運算子的規律（在什麼狀況下會為 `true`、什麼狀況為 `false`），那麼你知道 `i<0 || j==1 && k!=0` 的結果為什麼是 `true` 嗎？

 2. 接著我們來試試直接對變數做運算，請把 `i && j`, `i && k`, `j && k` 印出來，並將變數前後位置對調，請用 `||` 作上述動作，你知道為什麼印出來結果會是這樣嗎？

```
Ans: 1. and 全為真時才會為真，or 只要一者為真即為真
因為 and 的 priority 大於 or，所以 j==1 && k!=0 必須先做"&&"運算
2. a&&b，如果 a, b 任一值不為真（=0）則整個判斷是結果為 false 回傳 0，如果 a 為真（a!=0）則回傳 b 的值
a||b，如果 a, b 兩者皆為0則回傳 0，其中一者為0則回傳非零的值，兩者皆不為0則回傳a
```

補充:  
在JavaScript進行邏輯運算時，運算式中的 "參數值" 會被當作布林值作判斷，  
若參數值未設定，或是參數值為 0, -0, null, false, NaN, undefined, 空字串""，則當作false；參數為其它值或是物件，則為 true。  
值得一提的是，在進行邏輯運算之後，運算式將根據下列規則作數值的回傳:  

> 在 && 運算中，有2個規則:  
> 如果運算式轉為布林值為false，則回傳該數值。(例如0, null, undefined, NaN和空字串)  
> 如果為true，則回傳右邊運算式的數值；換言之，當全部成立時，回傳最右邊運算式的數值。  
> ex. 在上述題目中，i&&j的結果，由於i=-3, j=2，在進行邏輯運算時，兩個參數皆為true，故 &&  運算後的結果為true。根據第2個規則，結果將回傳右邊的運算式的數值2。

此外，假如左邊的運算式結果為true時，將不會執行右邊的運算式。

> 類似於&&，在 || 運算中，也有2個規則:
> 如果運算式轉為布林值為true，則回傳該數值。
> 如果為false，則回傳右邊運算式的數值；如果全部為false，則回傳false。

> 作者：EMMA

# 回家作業 第六題

宣告一個變數 `name`，並將其指定為你自己的英文名字並印出，然後在底下使用 `if` 進行判斷，如果 `name` 的長度大於 `5`，則印出 `Longer than five.`；否則，印出 `Shorter than six.`。

* 參考解答：

```
var name = "chgu82837";
console.log(name);
if( name.length > 5 )
{
    console.log('Longer than five.');
}
else
{
    console.log('Shorter than six.');
}
```

> 作者：禎原
